//오르막 수 성공분류 Silver I
//다이나믹 프로그래밍
//난이도 제공: solved.ac — 난이도 투표하러 가기
//시간 제한    메모리 제한    제출    정답    맞은 사람    정답 비율
//1 초    256 MB    23865    11430    8840    47.014%
//문제
//오르막 수는 수의 자리가 오름차순을 이루는 수를 말한다. 이때, 인접한 수가 같아도 오름차순으로 친다.
//
//예를 들어, 2234와 3678, 11119는 오르막 수이지만, 2232, 3676, 91111은 오르막 수가 아니다.
//
//수의 길이 N이 주어졌을 때, 오르막 수의 개수를 구하는 프로그램을 작성하시오. 수는 0으로 시작할 수 있다.
//
//입력
//첫째 줄에 N (1 ≤ N ≤ 1,000)이 주어진다.
//
//출력
//첫째 줄에 길이가 N인 오르막 수의 개수를 10,007로 나눈 나머지를 출력한다.
//
//예제 입력 1
//1
//예제 출력 1
//10
//예제 입력 2
//2
//예제 출력 2
//55
//예제 입력 3
//3
//예제 출력 3
//220

#include <iostream>
using namespace std;
long long d[1001][11];
int main()
{
    int N;
    cin>>N;
    
    // d[1][i] = 1 (0~9)
    for(int i=0; i<10; i++){
        d[1][i] = 1;
    }
    
   // d[n][i] length N, last i
   // d[n-1][i] + d[n-1][i-1] + .. + d[n-1][0]
    for(int k=2; k<=N; k++){
      for(int i=0; i<10; i++){
        for (int j = 0; j<=i; j++){
            d[k][i] += d[k-1][j];
            d[k][i] %= 10007;
        }
      }
    }
    long long sum=0;
    for(int i=0; i<10; i++){
        sum+=d[N][i];
    }
   
    cout<<sum%10007<<'\n';
    
return 0;
}
