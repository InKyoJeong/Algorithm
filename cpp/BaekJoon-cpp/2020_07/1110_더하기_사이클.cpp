// 더하기 사이클 성공분류 Bronze I
// 구현수학
// 난이도 제공: solved.ac — 난이도 투표하러 가기
// 시간 제한	메모리 제한	제출	정답	맞은 사람	정답 비율
// 2 초	128 MB	77643	37058	31632	48.628%
// 문제
// 0보다 크거나 같고, 99보다 작거나 같은 정수가 주어질 때 다음과 같은 연산을 할 수 있다. 먼저 주어진 수가 10보다 작다면 앞에 0을 붙여 두 자리 수로 만들고, 각 자리의 숫자를 더한다. 그 다음, 주어진 수의 가장 오른쪽 자리 수와 앞에서 구한 합의 가장 오른쪽 자리 수를 이어 붙이면 새로운 수를 만들 수 있다. 다음 예를 보자.

// 26부터 시작한다. 2+6 = 8이다. 새로운 수는 68이다. 6+8 = 14이다. 새로운 수는 84이다. 8+4 = 12이다. 새로운 수는 42이다. 4+2 = 6이다. 새로운 수는 26이다.

// 위의 예는 4번만에 원래 수로 돌아올 수 있다. 따라서 26의 사이클의 길이는 4이다.

// N이 주어졌을 때, N의 사이클의 길이를 구하는 프로그램을 작성하시오.

// 입력
// 첫째 줄에 N이 주어진다. N은 0보다 크거나 같고, 99보다 작거나 같은 정수이다.

// 출력
// 첫째 줄에 N의 사이클 길이를 출력한다.

// 예제 입력 1 
// 26
// 예제 출력 1 
// 4

#include <cstdio>

using namespace std;

int main()
{
    int num;
    int one;
    int next_one;
    int next_two;
    int two;
    int count = 0;
    scanf("%d", &num);
    int result = num;
    
    while(1){
        one = num/10;
        two = num %10;
        next_one = (one+two) % 10;
        next_two = (two*10) + next_one;
        num = next_two;
        count++;
        if(next_two == result)
            break;
    }
    printf("%d", count);
        
    return 0;
}
